PhaseToCore
===========

node (c : bool)
  returns (x, y)
  assumes ()
  shows ()
let
  pre_nats$1 : int
    = pre nats$1
   
  nats$1 : int
    = 0 -> Add(1, pre_nats$1)
   
  when_c$2 : int when c
    = nats$1 when c
   
  current_when_c : int
    = current when_c$2
   
  pre_x : int
    = pre x
   
  init_pre_x : int
    = 100 -> pre_x
   
  x : int
    = ITE(c, current_when_c, init_pre_x)
   
  when_c$1 : int when c
    = 0 when c
   
  when_c : int when c
    = 1 when c
   
  pre_nats : int when c
    = pre nats
   
  nats : int when c
    = when_c$1 -> Add(when_c, pre_nats)
   
  current_nats : int
    = current nats
   
  pre_y : int
    = pre y
   
  init_pre_y : int
    = 200 -> pre_y
   
  y : int
    = ITE(c, current_nats, init_pre_y)
tel

--- Step 1 ---
c : bool  = False
x = 100
y = 200
--- Step 2 ---
c : bool  = False
x = 100
y = 200
--- Step 3 ---
c : bool  = True
x = 2
y = 0
--- Step 4 ---
c : bool  = False
x = 2
y = 0
--- Step 5 ---
c : bool  = False
x = 2
y = 0
--- Step 6 ---
c : bool  = True
x = 5
y = 1
--- Step 7 ---
c : bool  = True
x = 6
y = 2
--- Step 8 ---
c : bool  = False
x = 6
y = 2
--- Step 9 ---
c : bool  = (EOF)
