PhaseToCore
===========

node (a : int)
  returns (x)
  assumes ()
  shows ()
let
  valof_pre_y$1 : int
    = pre y
   
  x : int
    = 0 -> valof_pre_y$1
   
  valof_pre_x : int
    = pre x
   
  valof_pre_y : int
    = pre y
   
  y : int
    = 1 -> Add(valof_pre_x, valof_pre_y)
tel

--- Step 1 ---
a : int  = 0
x = 0
--- Step 2 ---
a : int  = 0
x = 1
--- Step 3 ---
a : int  = 0
x = 1
--- Step 4 ---
a : int  = 0
x = 2
--- Step 5 ---
a : int  = 0
x = 3
--- Step 6 ---
a : int  = 0
x = 5
--- Step 7 ---
a : int  = 0
x = 8
--- Step 8 ---
a : int  = 0
x = 13
--- Step 9 ---
a : int  = 0
x = 21
--- Step 10 ---
a : int  = (EOF)
