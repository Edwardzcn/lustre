PhaseToCore
===========

node (c : bool)
  returns (n)
  assumes ()
  shows ()
let
  pre_nats : int when c
    = pre nats
   
  nats : int when c
    = 0 -> Add(1, pre_nats)
   
  current : int
    = current nats
   
  pre_n : int
    = pre n
   
  arr : int
    = 42 -> pre_n
   
  n : int
    = ITE(c, current, arr)
tel

--- Step 1 ---
c : bool  = False
n = 42
--- Step 2 ---
c : bool  = False
n = 42
--- Step 3 ---
c : bool  = True
n = 0
--- Step 4 ---
c : bool  = False
n = 0
--- Step 5 ---
c : bool  = False
n = 0
--- Step 6 ---
c : bool  = True
n = 1
--- Step 7 ---
c : bool  = True
n = 2
--- Step 8 ---
c : bool  = False
n = 2
--- Step 9 ---
c : bool  = False
n = 2
--- Step 10 ---
c : bool  = False
n = 2
--- Step 11 ---
c : bool  = (EOF)
