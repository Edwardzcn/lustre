node (a_1 : int)
  returns (x_2)
  assumes ()
  shows ()
let
  _pre_x_2_5 = pre x_2
  _pre_y_3_4 = pre y_3
  _pre_y_3_6 = pre y_3
  x_2 = 0 -> _pre_y_3_4
  y_3 = 1 -> Add(_pre_x_2_5, _pre_y_3_6)
tel
--- Step 1 ---
a_1 : int  = 0
x_2 = 0
--- Step 2 ---
a_1 : int  = 0
x_2 = 1
--- Step 3 ---
a_1 : int  = 0
x_2 = 1
--- Step 4 ---
a_1 : int  = 0
x_2 = 2
--- Step 5 ---
a_1 : int  = 0
x_2 = 3
--- Step 6 ---
a_1 : int  = 0
x_2 = 5
--- Step 7 ---
a_1 : int  = 0
x_2 = 8
--- Step 8 ---
a_1 : int  = 0
x_2 = 13
--- Step 9 ---
a_1 : int  = 0
x_2 = 21
